# https://lists.gnu.org/archive/html/qemu-devel/2017-10/msg03681.html
RUN echo "$LOCALE.UTF-8 UTF-8" > /etc/locale.gen \
	&& ([ "$LOCALE" == "en_US" ] || echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen) \
	&& locale-gen
ENV LC_ALL $LOCALE.UTF-8

RUN rm -f /etc/localtime \
	&& ln -s "/usr/share/zoneinfo/$TIMEZONE" /etc/localtime

RUN echo "HOOKS=(base udev block filesystems)" >> /etc/mkinitcpio.conf

RUN sed -i -e "s/^CheckSpace/#CheckSpace/g" /etc/pacman.conf

RUN echo "Server = $ARCH_DIST_REPO_URL/\$arch/\$repo" > /etc/pacman.d/mirrorlist \
	&& pacman-key --init \
	&& pacman-key --populate archlinuxarm


RUN pacman --noconfirm --ask=4 -Syy
RUN pacman --needed --noconfirm --ask=4 -S \
		glibc \
		openssl \
		openssl-1.0 \
		openssl-1.1
# RUN pacman --needed --noconfirm --ask=4 -S
RUN pacman-db-upgrade
RUN pacman-key --init
RUN pacman --needed --noconfirm -S \
		p11-kit \
		archlinux-keyring \
		ca-certificates \
		ca-certificates-mozilla \
		ca-certificates-utils
RUN pacman --noconfirm --ask=4 -Syu
RUN pacman --needed --noconfirm -S \
		base \
		base-devel \
		devtools \
		bc \
		inetutils \
		vim \
		wget \
		distcc \
		jq \
		git
RUN (pacman --noconfirm -Sc || true)

# RUN pacman -U --noconfirm https://alaa.ad24.cz/packages/p/python/python-3.11.8-1-aarch64.pkg.tar.xz
# 
# RUN pacman -U --noconfirm https://alaa.ad24.cz/packages/p/python-setuptools/python-setuptools-1:68.2.2-1-any.pkg.tar.xz
# RUN pacman -U --noconfirm https://alaa.ad24.cz/packages/p/python-packaging/python-packaging-23.2-1-any.pkg.tar.xz
# RUN pacman -U --noconfirm https://alaa.ad24.cz/packages/p/python-more-itertools/python-more-itertools-9.1.1-4-any.pkg.tar.xz
# RUN pacman -U --noconfirm https://alaa.ad24.cz/packages/p/python-pyserial/python-pyserial-3.5-5-any.pkg.tar.xz
# RUN pacman -U --noconfirm https://alaa.ad24.cz/packages/p/python-ordered-set/python-ordered-set-4.1.0-4-any.pkg.tar.xz
# RUN pacman -U --noconfirm https://alaa.ad24.cz/packages/p/python-jaraco/python-jaraco-2022.2.21-2-any.pkg.tar.xz

# RUN python3.11 -m venv pikvm-env
# RUN echo "source /pikvm-env/bin/activate" > /root/.bashrc
# RUN pip install setuptools packaging more-itertools

# RUN sed -i -e "s/^#IgnorePkg\s*=/IgnorePkg = python*/" /etc/pacman.conf

ARG TARGET_REPO_NAME
ENV TARGET_REPO_NAME $TARGET_REPO_NAME
RUN echo $TARGET_REPO_NAME

ARG TARGET_REPO_KEY
ENV TARGET_REPO_KEY $TARGET_REPO_KEY
RUN ( \
		pacman-key --keyserver hkps://keyserver.ubuntu.com:443 -r $TARGET_REPO_KEY \
		|| pacman-key --keyserver hkps://keys.gnupg.net:443 -r $TARGET_REPO_KEY \
		|| pacman-key --keyserver hkps://pgp.mit.edu:443 -r $TARGET_REPO_KEY \
	) \
	&& pacman-key --lsign-key $TARGET_REPO_KEY
# RUN pacman-key --add /home/alarm/.gnupg/public.key
# RUN pacman-key --lsign-key $TARGET_REPO_KEY

ARG ALARM_UID
ENV ALARM_UID $ALARM_UID
ARG ALARM_GID
ENV ALARM_GID $ALARM_GID
RUN userdel -r -f alarm \
	&& (g=$(getent group $ALARM_GID | cut -d: -f1); [ -z "$g" ] || groupdel "$g") \
	&& (u=$(getent passwd $ALARM_UID | cut -d: -f1); [ -z "$u" ] || userdel "$u") \
	&& groupadd -g $ALARM_GID alarm \
	&& useradd -u $ALARM_UID -g $ALARM_GID -m alarm \
	&& mkdir -p /run/user/$ALARM_UID \
	&& chown alarm:alarm /run/user/$ALARM_UID

RUN mkdir /tools
COPY stages/buildenv/buildpkg /tools/
